#Given an array of strings wordsDict and two different strings that already exist in the array word1 and word2, 
#return the shortest distance between these two words in the list.

 

#Example 1:

#Input: wordsDict = ["practice", "makes", "perfect", "coding", "makes"], word1 = "coding", word2 = "practice"
#Output: 3
#Example 2:

#Input: wordsDict = ["practice", "makes", "perfect", "coding", "makes"], word1 = "makes", word2 = "coding"
#Output: 1

class Solution(object):
    def shortestDistance(self, wordsDict, word1, word2):
        """
        :type wordsDict: List[str]
        :type word1: str
        :type word2: str
        :rtype: int
        """
        out = first = second = float('inf')
        for i,word in enumerate(wordsDict):
            if word == word1: first = i
            elif word == word2: second = i
            out = min(abs(first - second), out)
        return out
